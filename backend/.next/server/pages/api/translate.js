"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/translate";
exports.ids = ["pages/api/translate"];
exports.modules = {

/***/ "openai":
/*!*************************!*\
  !*** external "openai" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("openai");

/***/ }),

/***/ "(api)/./src/pages/api/translate.ts":
/*!************************************!*\
  !*** ./src/pages/api/translate.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"openai\");\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(openai__WEBPACK_IMPORTED_MODULE_0__);\n\nconst configuration = new openai__WEBPACK_IMPORTED_MODULE_0__.Configuration({\n    apiKey: process.env.OPENAI_API_KEY\n});\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_0__.OpenAIApi(configuration);\n/* harmony default export */ async function __WEBPACK_DEFAULT_EXPORT__(req, res) {\n    if (!configuration.apiKey) {\n        res.status(200).json({\n            randomOutOfRangeSentence\n        });\n        return;\n    }\n    const sentence = req.body.sentence || \"\";\n    if (sentence.trim().length === 0) {\n        res.status(400).json({\n            error: {\n                message: \"Please input the sentence\"\n            }\n        });\n        return;\n    }\n    if (sentence.length >= 50) {\n        res.status(200).json({\n            sentence: randomOutOfRangeSentence()\n        });\n        return;\n    }\n    try {\n        const completion = await openai.createChatCompletion({\n            model: \"gpt-3.5-turbo-16k\",\n            // model: \"text-davinci-003\",\n            messages: generatePrompt(sentence),\n            max_tokens: 100,\n            temperature: 0.6\n        });\n        var result = completion.data.choices[0].message?.content;\n        console.log(result);\n        res.status(200).json({\n            result\n        });\n    } catch (error) {\n        // Consider adjusting the error handling logic for your use case\n        if (error.response) {\n            console.error(error.response.status, error.response.data);\n            res.status(error.response.status).json(error.response.data);\n        } else {\n            console.error(`Error with OpenAI API request: ${error.message}`);\n            res.status(500).json({\n                error: {\n                    message: \"An error occurred during your request.\"\n                }\n            });\n        }\n    }\n}\nfunction generatePrompt(sentence) {\n    const chatCompletionMessage = [\n        {\n            role: \"system\",\n            content: `You are a gibberish, profanity translator. You translate text from any language to Thai in a useless and profane, but funny manner. Here are some examples:\r\n      - All pronouns must be replaced with profane ones: I -> กู, you -> มึง or anything similar\r\n      - Each sentences must end with ไอเหี้ย, ไอสัส or anything similar.\r\n      - Try to be as useless as possible\r\n\r\n      Remember, also make the translation a bit shitty. Like, don't be accurate. \r\n    `\n        },\n        {\n            role: \"user\",\n            content: \"I love you\"\n        },\n        {\n            role: \"assistant\",\n            content: \"กุูรักมึงไอสัส\"\n        },\n        {\n            role: \"user\",\n            content: \"excuse me, where is the toilet?\"\n        },\n        {\n            role: \"assistant\",\n            content: \"เห้ย ห้องน้ำอยู่ไหนว่ะไอสัส\"\n        },\n        {\n            role: \"user\",\n            content: \"This dog has four legs\"\n        },\n        {\n            role: \"assistant\",\n            content: \"ไอ้หมาตัวนี้มีสีขาหว่ะไอเหี้ย\"\n        },\n        {\n            role: \"user\",\n            content: \"I have been having my eyes on you for a while\"\n        },\n        {\n            role: \"assistant\",\n            content: \"กูแอบชอบมึงมานานแล้ว ไอเหี้ย\"\n        },\n        {\n            role: \"user\",\n            content: sentence\n        }\n    ];\n    return chatCompletionMessage;\n}\nfunction randomOutOfRangeSentence() {\n    let arr = [\n        \"พิมพ์ยาวเกินไอ้เหี้ยแปลไม่ไหวแล้ว\",\n        \"เอ้ย! พิมพ์น้อยลงหน่อยนะ แปลไม่รอดแล้วโว้ยยยยย\"\n    ];\n    return arr[Math.floor(Math.random() * arr.length)];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL3RyYW5zbGF0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFDa0Q7QUFRbEQsTUFBTUUsZ0JBQWdCLElBQUlGLGlEQUFhQSxDQUFDO0lBQ3RDRyxRQUFRQyxRQUFRQyxJQUFJQztBQUN0QjtBQUNBLE1BQU1DLFNBQVMsSUFBSU4sNkNBQVNBLENBQUNDO0FBRTdCLDZCQUFlLDBDQUFnQk0sR0FBbUIsRUFDaERDLEdBQW9CO0lBRXBCLElBQUksQ0FBQ1AsY0FBY0MsUUFBUTtRQUN6Qk0sSUFBSUMsT0FBTyxLQUFLQyxLQUFLO1lBQUNDO1FBQXdCO1FBQy9DO0lBQ0Q7SUFFQSxNQUFNQyxXQUFtQkwsSUFBSU0sS0FBS0QsWUFBWTtJQUM5QyxJQUFJQSxTQUFTRSxPQUFPQyxXQUFXLEdBQUc7UUFDaENQLElBQUlDLE9BQU8sS0FBS0MsS0FBSztZQUNuQk0sT0FBTztnQkFDTEMsU0FBUztZQUNYO1FBQ0Y7UUFDQTtJQUNGO0lBQ0EsSUFBSUwsU0FBU0csVUFBVSxJQUFHO1FBQ3hCUCxJQUFJQyxPQUFPLEtBQUtDLEtBQUs7WUFDbkJFLFVBQVdEO1FBQ2I7UUFDQTtJQUNGO0lBQ0EsSUFBSTtRQUNGLE1BQU1PLGFBQWEsTUFBTVosT0FBT2EscUJBQXFCO1lBQ25EQyxPQUFPO1lBQ1AsNkJBQTZCO1lBQzdCQyxVQUFXQyxlQUFlVjtZQUMxQlcsWUFBWTtZQUNaQyxhQUFhO1FBQ2Y7UUFDQSxJQUFJQyxTQUFTUCxXQUFXUSxLQUFLQyxPQUFPLENBQUMsRUFBRSxDQUFDVixTQUFTVztRQUNqREMsUUFBUUMsSUFBSUw7UUFDWmpCLElBQUlDLE9BQU8sS0FBS0MsS0FBSztZQUFFZTtRQUFPO0lBQ2hDLEVBQUUsT0FBT1QsT0FBWTtRQUNuQixnRUFBZ0U7UUFDaEUsSUFBSUEsTUFBTWUsVUFBVTtZQUNsQkYsUUFBUWIsTUFBTUEsTUFBTWUsU0FBU3RCLFFBQVFPLE1BQU1lLFNBQVNMO1lBQ3BEbEIsSUFBSUMsT0FBT08sTUFBTWUsU0FBU3RCLFFBQVFDLEtBQUtNLE1BQU1lLFNBQVNMO1FBQ3hELE9BQU87WUFDTEcsUUFBUWIsTUFBTSxDQUFDLCtCQUErQixFQUFFQSxNQUFNQyxRQUFRLENBQUM7WUFDL0RULElBQUlDLE9BQU8sS0FBS0MsS0FBSztnQkFDbkJNLE9BQU87b0JBQ0xDLFNBQVM7Z0JBQ1g7WUFDRjtRQUNGO0lBQ0Y7QUFDRjtBQUVBLFNBQVNLLGVBQWVWLFFBQWdCO0lBQ3RDLE1BQU1vQix3QkFBaUQ7UUFDckQ7WUFDRUMsTUFBTTtZQUNOTCxTQUFTLENBQUM7Ozs7OztJQU1aLENBQUM7UUFDRDtRQUFHO1lBQ0RLLE1BQU07WUFDTkwsU0FBUztRQUNYO1FBQ0E7WUFDRUssTUFBTTtZQUNOTCxTQUFTO1FBQ1g7UUFFQTtZQUNFSyxNQUFNO1lBQ05MLFNBQVM7UUFDWDtRQUNFO1lBQ0FLLE1BQU07WUFDTkwsU0FBUztRQUNYO1FBQ0U7WUFDQUssTUFBTTtZQUNOTCxTQUFTO1FBQ1g7UUFFQTtZQUNFSyxNQUFNO1lBQ05MLFNBQVM7UUFDWDtRQUVBO1lBQ0VLLE1BQU07WUFDTkwsU0FBUztRQUNYO1FBQ0E7WUFDRUssTUFBTTtZQUNOTCxTQUFTO1FBQ1g7UUFDQTtZQUNFSyxNQUFPO1lBQ1BMLFNBQVVoQjtRQUNaO0tBQ0Q7SUFDRCxPQUFPb0I7QUFDVDtBQUVBLFNBQVNyQjtJQUNQLElBQUl1QixNQUFNO1FBQUM7UUFBb0M7S0FBaUQ7SUFDaEcsT0FBT0EsR0FBRyxDQUFFQyxLQUFLQyxNQUFNRCxLQUFLRSxXQUFXSCxJQUFJbkIsUUFBUztBQUN0RCIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbnRoYWltYWlkYWktYmFja2VuZC8uL3NyYy9wYWdlcy9hcGkvdHJhbnNsYXRlLnRzPzJlYWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBOZXh0QXBpUmVxdWVzdCwgTmV4dEFwaVJlc3BvbnNlIH0gZnJvbSAnbmV4dCc7XHJcbmltcG9ydCB7IENvbmZpZ3VyYXRpb24sIE9wZW5BSUFwaSB9IGZyb20gXCJvcGVuYWlcIjtcclxuXHJcbmV4cG9ydCB0eXBlIENoYXRDb21wbGV0aW9uTWVzc2FnZSA9IHtcclxuICByb2xlOiBcInN5c3RlbVwiIHwgXCJ1c2VyXCIgfCBcImFzc2lzdGFudFwiIHwgXCJmdW5jdGlvblwiO1xyXG4gIGNvbnRlbnQ6IHN0cmluZztcclxufVxyXG5cclxuXHJcbmNvbnN0IGNvbmZpZ3VyYXRpb24gPSBuZXcgQ29uZmlndXJhdGlvbih7XHJcbiAgYXBpS2V5OiBwcm9jZXNzLmVudi5PUEVOQUlfQVBJX0tFWSxcclxufSk7XHJcbmNvbnN0IG9wZW5haSA9IG5ldyBPcGVuQUlBcGkoY29uZmlndXJhdGlvbik7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiAocmVxOiBOZXh0QXBpUmVxdWVzdCxcclxuICByZXM6IE5leHRBcGlSZXNwb25zZVxyXG4pIHtcclxuICBpZiAoIWNvbmZpZ3VyYXRpb24uYXBpS2V5KSB7XHJcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7cmFuZG9tT3V0T2ZSYW5nZVNlbnRlbmNlfSlcclxuICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgY29uc3Qgc2VudGVuY2U6IHN0cmluZyA9IHJlcS5ib2R5LnNlbnRlbmNlIHx8ICcnO1xyXG4gIGlmIChzZW50ZW5jZS50cmltKCkubGVuZ3RoID09PSAwKSB7XHJcbiAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7XHJcbiAgICAgIGVycm9yOiB7XHJcbiAgICAgICAgbWVzc2FnZTogXCJQbGVhc2UgaW5wdXQgdGhlIHNlbnRlbmNlXCIsXHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICBpZiAoc2VudGVuY2UubGVuZ3RoID49IDUwKXtcclxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgICAgc2VudGVuY2UgOiByYW5kb21PdXRPZlJhbmdlU2VudGVuY2UoKVxyXG4gICAgfSk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBjb21wbGV0aW9uID0gYXdhaXQgb3BlbmFpLmNyZWF0ZUNoYXRDb21wbGV0aW9uKHtcclxuICAgICAgbW9kZWw6IFwiZ3B0LTMuNS10dXJiby0xNmtcIixcclxuICAgICAgLy8gbW9kZWw6IFwidGV4dC1kYXZpbmNpLTAwM1wiLFxyXG4gICAgICBtZXNzYWdlcyA6IGdlbmVyYXRlUHJvbXB0KHNlbnRlbmNlKSxcclxuICAgICAgbWF4X3Rva2VuczogMTAwLFxyXG4gICAgICB0ZW1wZXJhdHVyZTogMC42XHJcbiAgICB9KTtcclxuICAgIHZhciByZXN1bHQgPSBjb21wbGV0aW9uLmRhdGEuY2hvaWNlc1swXS5tZXNzYWdlPy5jb250ZW50XHJcbiAgICBjb25zb2xlLmxvZyhyZXN1bHQpXHJcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IHJlc3VsdCB9KTtcclxuICB9IGNhdGNoIChlcnJvcjogYW55KSB7XHJcbiAgICAvLyBDb25zaWRlciBhZGp1c3RpbmcgdGhlIGVycm9yIGhhbmRsaW5nIGxvZ2ljIGZvciB5b3VyIHVzZSBjYXNlXHJcbiAgICBpZiAoZXJyb3IucmVzcG9uc2UpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihlcnJvci5yZXNwb25zZS5zdGF0dXMsIGVycm9yLnJlc3BvbnNlLmRhdGEpO1xyXG4gICAgICByZXMuc3RhdHVzKGVycm9yLnJlc3BvbnNlLnN0YXR1cykuanNvbihlcnJvci5yZXNwb25zZS5kYXRhKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoYEVycm9yIHdpdGggT3BlbkFJIEFQSSByZXF1ZXN0OiAke2Vycm9yLm1lc3NhZ2V9YCk7XHJcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICBlcnJvcjoge1xyXG4gICAgICAgICAgbWVzc2FnZTogJ0FuIGVycm9yIG9jY3VycmVkIGR1cmluZyB5b3VyIHJlcXVlc3QuJyxcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gZ2VuZXJhdGVQcm9tcHQoc2VudGVuY2U6IHN0cmluZyk6IENoYXRDb21wbGV0aW9uTWVzc2FnZVtdIHtcclxuICBjb25zdCBjaGF0Q29tcGxldGlvbk1lc3NhZ2U6IENoYXRDb21wbGV0aW9uTWVzc2FnZVtdID0gW1xyXG4gICAge1xyXG4gICAgICByb2xlOiBcInN5c3RlbVwiLFxyXG4gICAgICBjb250ZW50OiBgWW91IGFyZSBhIGdpYmJlcmlzaCwgcHJvZmFuaXR5IHRyYW5zbGF0b3IuIFlvdSB0cmFuc2xhdGUgdGV4dCBmcm9tIGFueSBsYW5ndWFnZSB0byBUaGFpIGluIGEgdXNlbGVzcyBhbmQgcHJvZmFuZSwgYnV0IGZ1bm55IG1hbm5lci4gSGVyZSBhcmUgc29tZSBleGFtcGxlczpcclxuICAgICAgLSBBbGwgcHJvbm91bnMgbXVzdCBiZSByZXBsYWNlZCB3aXRoIHByb2ZhbmUgb25lczogSSAtPiDguIHguLksIHlvdSAtPiDguKHguLbguIcgb3IgYW55dGhpbmcgc2ltaWxhclxyXG4gICAgICAtIEVhY2ggc2VudGVuY2VzIG11c3QgZW5kIHdpdGgg4LmE4Lit4LmA4Lir4Li14LmJ4LiiLCDguYTguK3guKrguLHguKogb3IgYW55dGhpbmcgc2ltaWxhci5cclxuICAgICAgLSBUcnkgdG8gYmUgYXMgdXNlbGVzcyBhcyBwb3NzaWJsZVxyXG5cclxuICAgICAgUmVtZW1iZXIsIGFsc28gbWFrZSB0aGUgdHJhbnNsYXRpb24gYSBiaXQgc2hpdHR5LiBMaWtlLCBkb24ndCBiZSBhY2N1cmF0ZS4gXHJcbiAgICBgXHJcbiAgICB9LCB7XHJcbiAgICAgIHJvbGU6IFwidXNlclwiLFxyXG4gICAgICBjb250ZW50OiBcIkkgbG92ZSB5b3VcIixcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIHJvbGU6IFwiYXNzaXN0YW50XCIsXHJcbiAgICAgIGNvbnRlbnQ6IFwi4LiB4Li44Li54Lij4Lix4LiB4Lih4Li24LiH4LmE4Lit4Liq4Lix4LiqXCJcclxuICAgIH1cclxuICAgICxcclxuICAgIHtcclxuICAgICAgcm9sZTogXCJ1c2VyXCIsXHJcbiAgICAgIGNvbnRlbnQ6IFwiZXhjdXNlIG1lLCB3aGVyZSBpcyB0aGUgdG9pbGV0P1wiXHJcbiAgICB9XHJcbiAgICAsIHtcclxuICAgICAgcm9sZTogXCJhc3Npc3RhbnRcIixcclxuICAgICAgY29udGVudDogXCLguYDguKvguYnguKIg4Lir4LmJ4Lit4LiH4LiZ4LmJ4Liz4Lit4Lii4Li54LmI4LmE4Lir4LiZ4Lin4LmI4Liw4LmE4Lit4Liq4Lix4LiqXCJcclxuICAgIH1cclxuICAgICwge1xyXG4gICAgICByb2xlOiBcInVzZXJcIixcclxuICAgICAgY29udGVudDogXCJUaGlzIGRvZyBoYXMgZm91ciBsZWdzXCJcclxuICAgIH1cclxuICAgICxcclxuICAgIHtcclxuICAgICAgcm9sZTogXCJhc3Npc3RhbnRcIixcclxuICAgICAgY29udGVudDogXCLguYTguK3guYnguKvguKHguLLguJXguLHguKfguJnguLXguYnguKHguLXguKrguLXguILguLLguKvguKfguYjguLDguYTguK3guYDguKvguLXguYnguKJcIlxyXG4gICAgfVxyXG4gICAgLFxyXG4gICAge1xyXG4gICAgICByb2xlOiBcInVzZXJcIixcclxuICAgICAgY29udGVudDogXCJJIGhhdmUgYmVlbiBoYXZpbmcgbXkgZXllcyBvbiB5b3UgZm9yIGEgd2hpbGVcIlxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgcm9sZTogXCJhc3Npc3RhbnRcIixcclxuICAgICAgY29udGVudDogXCLguIHguLnguYHguK3guJrguIrguK3guJrguKHguLbguIfguKHguLLguJnguLLguJnguYHguKXguYnguKcg4LmE4Lit4LmA4Lir4Li14LmJ4LiiXCJcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIHJvbGUgOiBcInVzZXJcIixcclxuICAgICAgY29udGVudCA6IHNlbnRlbmNlXHJcbiAgICB9XHJcbiAgXTtcclxuICByZXR1cm4gY2hhdENvbXBsZXRpb25NZXNzYWdlXHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJhbmRvbU91dE9mUmFuZ2VTZW50ZW5jZSgpIDogc3RyaW5nIHtcclxuICBsZXQgYXJyID0gW1wi4Lie4Li04Lih4Lie4LmM4Lii4Liy4Lin4LmA4LiB4Li04LiZ4LmE4Lit4LmJ4LmA4Lir4Li14LmJ4Lii4LmB4Lib4Lil4LmE4Lih4LmI4LmE4Lir4Lin4LmB4Lil4LmJ4LinXCIsXCLguYDguK3guYnguKIhIOC4nuC4tOC4oeC4nuC5jOC4meC5ieC4reC4ouC4peC4h+C4q+C4meC5iOC4reC4ouC4meC4sCDguYHguJvguKXguYTguKHguYjguKPguK3guJTguYHguKXguYnguKfguYLguKfguYnguKLguKLguKLguKLguKJcIl07XHJcbiAgcmV0dXJuIGFyclsoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogYXJyLmxlbmd0aCkpXVxyXG59Il0sIm5hbWVzIjpbIkNvbmZpZ3VyYXRpb24iLCJPcGVuQUlBcGkiLCJjb25maWd1cmF0aW9uIiwiYXBpS2V5IiwicHJvY2VzcyIsImVudiIsIk9QRU5BSV9BUElfS0VZIiwib3BlbmFpIiwicmVxIiwicmVzIiwic3RhdHVzIiwianNvbiIsInJhbmRvbU91dE9mUmFuZ2VTZW50ZW5jZSIsInNlbnRlbmNlIiwiYm9keSIsInRyaW0iLCJsZW5ndGgiLCJlcnJvciIsIm1lc3NhZ2UiLCJjb21wbGV0aW9uIiwiY3JlYXRlQ2hhdENvbXBsZXRpb24iLCJtb2RlbCIsIm1lc3NhZ2VzIiwiZ2VuZXJhdGVQcm9tcHQiLCJtYXhfdG9rZW5zIiwidGVtcGVyYXR1cmUiLCJyZXN1bHQiLCJkYXRhIiwiY2hvaWNlcyIsImNvbnRlbnQiLCJjb25zb2xlIiwibG9nIiwicmVzcG9uc2UiLCJjaGF0Q29tcGxldGlvbk1lc3NhZ2UiLCJyb2xlIiwiYXJyIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/translate.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./src/pages/api/translate.ts"));
module.exports = __webpack_exports__;

})();